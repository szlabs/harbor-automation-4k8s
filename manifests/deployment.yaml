apiVersion: v1
kind: Namespace
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  labels:
    control-plane: controller-manager
  name: harbor-day2-op
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  creationTimestamp: null
  name: harborserverconfigurations.goharbor.goharbor.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.serverURL
    description: The public URL to the Harbor server
    name: Harbor Server
    type: string
  - JSONPath: .status.status
    description: The status of the Harbor server
    name: Status
    type: string
  - JSONPath: .spec.version
    description: The version of the Harbor server
    name: Version
    priority: 5
    type: string
  group: goharbor.goharbor.io
  names:
    categories:
    - goharbor
    kind: HarborServerConfiguration
    listKind: HarborServerConfigurationList
    plural: harborserverconfigurations
    shortNames:
    - hsc
    singular: harborserverconfiguration
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: HarborServerConfiguration is the Schema for the harborserverconfigurations API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HarborServerConfigurationSpec defines the desired state of HarborServerConfiguration
          properties:
            accessCredential:
              description: AccessCredential is a namespaced credential to keep the access key and secret for the harbor server configuration
              properties:
                accessSecretRef:
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                  type: string
                namespace:
                  pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                  type: string
              required:
              - accessSecretRef
              - namespace
              type: object
            inSecure:
              description: Indicate if the Harbor server is an insecure registry
              type: boolean
            serverURL:
              pattern: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)+([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])
              type: string
            version:
              description: The version of the Harbor server
              pattern: (0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?
              type: string
          required:
          - accessCredential
          - serverURL
          - version
          type: object
        status:
          description: HarborServerConfigurationStatus defines the observed state of HarborServerConfiguration
          properties:
            conditions:
              description: Conditions list of extracted conditions from Resource Add the health status of harbor components into condition list
              items:
                description: Condition defines the general format for conditions on Kubernetes resources. In practice, each kubernetes resource defines their own format for conditions, but most (maybe all) follows this structure.
                properties:
                  message:
                    description: Message Human readable reason string
                    type: string
                  reason:
                    description: Reason one work CamelCase reason
                    type: string
                  status:
                    description: Status String that describes the condition status
                    type: string
                  type:
                    description: Type condition type
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            status:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file Indicate if the server is healthy'
              type: string
          required:
          - conditions
          - status
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  creationTimestamp: null
  name: pullsecretbindings.goharbor.goharbor.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.harborServerConfig
    description: The Harbor server configuration CR reference
    name: Harbor Server
    type: string
  - JSONPath: .spec.serviceAccount
    description: The service account binding the pull secret
    name: Service Account
    type: string
  - JSONPath: .status.status
    description: The status of the Harbor server
    name: Status
    type: string
  group: goharbor.goharbor.io
  names:
    categories:
    - goharbor
    kind: PullSecretBinding
    listKind: PullSecretBindingList
    plural: pullsecretbindings
    shortNames:
    - psb
    singular: pullsecretbinding
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PullSecretBinding is the Schema for the pullsecretbindings API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PullSecretBindingSpec defines the desired state of PullSecretBinding
          properties:
            harborServerConfig:
              description: Indicate which harbor server configuration is referred
              type: string
            serviceAccount:
              description: Indicate which service account binds the pull secret
              type: string
          required:
          - harborServerConfig
          - serviceAccount
          type: object
        status:
          description: PullSecretBindingStatus defines the observed state of PullSecretBinding
          properties:
            conditions:
              description: Conditions list of extracted conditions from Resource Add the relate conditions of the parts involved in this binding
              items:
                description: Condition defines the general format for conditions on Kubernetes resources. In practice, each kubernetes resource defines their own format for conditions, but most (maybe all) follows this structure.
                properties:
                  message:
                    description: Message Human readable reason string
                    type: string
                  reason:
                    description: Reason one work CamelCase reason
                    type: string
                  status:
                    description: Status String that describes the condition status
                    type: string
                  type:
                    description: Type condition type
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            status:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file Indicate the status of binding: `binding`, `bound` and `unknown`'
              type: string
          required:
          - conditions
          - status
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-leader-election-role
  namespace: harbor-day2-op
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  creationTimestamp: null
  name: harbor-automation-4k8s-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - goharbor.goharbor.io
  resources:
  - harborserverconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - goharbor.goharbor.io
  resources:
  - harborserverconfigurations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - goharbor.goharbor.io
  resources:
  - pullsecretbindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - goharbor.goharbor.io
  resources:
  - pullsecretbindings/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-leader-election-rolebinding
  namespace: harbor-day2-op
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: harbor-automation-4k8s-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: harbor-day2-op
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harbor-automation-4k8s-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: harbor-day2-op
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harbor-automation-4k8s-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: harbor-day2-op
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  labels:
    control-plane: controller-manager
  name: harbor-automation-4k8s-controller-manager-metrics-service
  namespace: harbor-day2-op
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-webhook-service
  namespace: harbor-day2-op
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  labels:
    control-plane: controller-manager
  name: harbor-automation-4k8s-controller-manager
  namespace: harbor-day2-op
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        goharbor.io/operator-version: v1.0.0
        goharbor.io/template: Kustomization
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: goharbor/harbor-day2-operator:dev
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-serving-cert
  namespace: harbor-day2-op
spec:
  dnsNames:
  - harbor-automation-4k8s-webhook-service.harbor-day2-op.svc
  - harbor-automation-4k8s-webhook-service.harbor-day2-op.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: harbor-automation-4k8s-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  annotations:
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-selfsigned-issuer
  namespace: harbor-day2-op
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: harbor-day2-op/harbor-automation-4k8s-serving-cert
    goharbor.io/operator-version: v1.0.0
    goharbor.io/template: Kustomization
  name: harbor-automation-4k8s-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: harbor-automation-4k8s-webhook-service
      namespace: harbor-day2-op
      path: /mutate-image-path
  failurePolicy: Fail
  name: mimg.kb.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
