
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: harborserverconfigurations.goharbor.goharbor.io
spec:
  group: goharbor.goharbor.io
  names:
    categories:
    - goharbor
    kind: HarborServerConfiguration
    listKind: HarborServerConfigurationList
    plural: harborserverconfigurations
    shortNames:
    - hsc
    singular: harborserverconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: The public URL to the Harbor server
      jsonPath: .spec.serverURL
      name: Harbor Server
      type: string
    - description: The status of the Harbor server
      jsonPath: .status.status
      name: Status
      type: string
    - description: The version of the Harbor server
      jsonPath: .spec.version
      name: Version
      priority: 5
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HarborServerConfiguration is the Schema for the harborserverconfigurations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HarborServerConfigurationSpec defines the desired state of HarborServerConfiguration
            properties:
              accessCredential:
                description: AccessCredential is a namespaced credential to keep the access key and secret for the harbor server configuration
                properties:
                  accessSecretRef:
                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                    type: string
                  namespace:
                    pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                    type: string
                required:
                - accessSecretRef
                - namespace
                type: object
              default:
                description: Default indicates the harbor configuration manages namespaces that omit the goharbor.io/secret-issuer annotation. At most, one HarborServerConfiguration can be the default, multiple defaults will be rejected.
                type: boolean
              inSecure:
                description: Indicate if the Harbor server is an insecure registry
                type: boolean
              rules:
                description: Rules configures the container image rewrite rules for transparent proxy caching with Harbor.
                items:
                  description: ImageRule defines a rule to rewrite container images to a harbor project for images that match the registry regular expression.
                  properties:
                    project:
                      description: HarborProject is the Harbor proxy cache project for registries that match the regex.
                      type: string
                    registryRegex:
                      description: RegistryRegex is a regular expression that matches the registry an image is pulled from. For example, `^docker\.io$` will match the dockerhub registry.
                      type: string
                  required:
                  - project
                  - registryRegex
                  type: object
                type: array
              serverURL:
                pattern: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)+([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])
                type: string
              version:
                description: The version of the Harbor server
                pattern: (0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?
                type: string
            required:
            - accessCredential
            - default
            - serverURL
            - version
            type: object
          status:
            description: HarborServerConfigurationStatus defines the observed state of HarborServerConfiguration
            properties:
              conditions:
                description: Conditions list of extracted conditions from Resource Add the health status of harbor components into condition list
                items:
                  description: Condition defines the general format for conditions on Kubernetes resources. In practice, each kubernetes resource defines their own format for conditions, but most (maybe all) follows this structure.
                  properties:
                    message:
                      description: Message Human readable reason string
                      type: string
                    reason:
                      description: Reason one work CamelCase reason
                      type: string
                    status:
                      description: Status String that describes the condition status
                      type: string
                    type:
                      description: Type condition type
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              status:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file Indicate if the server is healthy'
                type: string
            required:
            - conditions
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
